diff --git a/src/main/java/mcjty/theoneprobe/api/TextStyleClass.java b/sdcard/top/src/main/java/mcjty/theoneprobe/api/TextStyleClass.java
index 24631d0..5415890 100644
--- a/src/main/java/mcjty/theoneprobe/api/TextStyleClass.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/api/TextStyleClass.java
@@ -6,16 +6,16 @@ package mcjty.theoneprobe.api;
  * probeInfo.text(TextStyleClass.ERROR + "Error! World will explode in 5 seconds!");
  */
 public enum TextStyleClass {
-    MODNAME("m", "ModName"),         // Name of the mod
-    NAME("n", "Name"),               // Name of the block or entity
-    INFO("i", "Info"),               // General info, neutral
-    INFOIMP("I", "InfoImportant"),   // General info, important
-    WARNING("w", "Warning"),         // Warning, something is not ready (not mature), or missing stuff
-    ERROR("e", "Error"),             // Error, bad situation, out of power, things like that
-    OBSOLETE("O", "Obsolete"),       // Obsolete, deprecated, old information
-    LABEL("l", "Label"),             // A label, use the 'context' code to set the same as the style that follows
+    MODNAME("m", "Mod名称"),         // Name of the mod
+    NAME("n", "名称"),               // Name of the block or entity
+    INFO("i", "信息"),               // General info, neutral
+    INFOIMP("I", "重要信息"),   // General info, important
+    WARNING("w", "警告"),         // Warning, something is not ready (not mature), or missing stuff
+    ERROR("e", "错误"),             // Error, bad situation, out of power, things like that
+    OBSOLETE("O", "过时"),       // Obsolete, deprecated, old information
+    LABEL("l", "标签"),             // A label, use the 'context' code to set the same as the style that follows
     OK("o", "Ok"),                   // Status ok
-    PROGRESS("p", "Progress");       // Progress rendering in case the bar is not used
+    PROGRESS("p", "进度");       // Progress rendering in case the bar is not used
 
     private final String code;
     private final String readableName;
diff --git a/src/main/java/mcjty/theoneprobe/apiimpl/client/ElementItemStackRender.java b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/client/ElementItemStackRender.java
index 5709fcb..201403b 100644
--- a/src/main/java/mcjty/theoneprobe/apiimpl/client/ElementItemStackRender.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/client/ElementItemStackRender.java
@@ -29,7 +29,7 @@ public class ElementItemStackRender {
 
             if (!RenderHelper.renderItemStack(Minecraft.getMinecraft(), itemRender, itemStack, x + (style.getWidth() - 18) / 2, y + (style.getHeight() - 18) / 2, amount)) {
                 // There was a crash rendering this item
-                RenderHelper.renderText(Minecraft.getMinecraft(), x, y, TextFormatting.RED + "ERROR: " + itemStack.getDisplayName());
+                RenderHelper.renderText(Minecraft.getMinecraft(), x, y, TextFormatting.RED + "错误: " + itemStack.getDisplayName());
             }
         }
     }
diff --git a/src/main/java/mcjty/theoneprobe/apiimpl/providers/ChestInfoTools.java b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/ChestInfoTools.java
index 68b88f6..bb72f31 100644
--- a/src/main/java/mcjty/theoneprobe/apiimpl/providers/ChestInfoTools.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/ChestInfoTools.java
@@ -129,7 +129,7 @@ public class ChestInfoTools {
                 }
             }
         } catch(RuntimeException e) {
-            throw new RuntimeException("Getting the contents of a " + world.getBlockState(pos).getBlock().getRegistryName() + " (" + te.getClass().getName() + ")", e);
+            throw new RuntimeException("获得一个内容" + world.getBlockState(pos).getBlock().getRegistryName() + " (" + te.getClass().getName() + ")", e);
         }
         return maxSlots;
     }
diff --git a/src/main/java/mcjty/theoneprobe/apiimpl/providers/DebugProbeInfoEntityProvider.java b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/DebugProbeInfoEntityProvider.java
index bbd642e..fdec341 100644
--- a/src/main/java/mcjty/theoneprobe/apiimpl/providers/DebugProbeInfoEntityProvider.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/DebugProbeInfoEntityProvider.java
@@ -37,11 +37,11 @@ public class DebugProbeInfoEntityProvider implements IProbeInfoEntityProvider {
                 float aiMoveSpeed = entityLivingBase.getAIMoveSpeed();
                 int revengeTimer = entityLivingBase.getRevengeTimer();
                 vertical
-                        .text(LABEL + "Tot armor: " + INFO + totalArmorValue)
-                        .text(LABEL + "Age: " + INFO + age)
-                        .text(LABEL + "Absorption: " + INFO + absorptionAmount)
-                        .text(LABEL + "AI Move Speed: " + INFO + aiMoveSpeed)
-                        .text(LABEL + "Revenge Timer: " + INFO + revengeTimer);
+                        .text(LABEL + "总护甲值: " + INFO + totalArmorValue)
+                        .text(LABEL + "年龄: " + INFO + age)
+                        .text(LABEL + "盔甲架: " + INFO + absorptionAmount)
+                        .text(LABEL + "AI移动速度: " + INFO + aiMoveSpeed)
+                        .text(LABEL + "复活倒计时: " + INFO + revengeTimer);
             }
             if (entity instanceof EntityAgeable) {
                 if (vertical == null) {
@@ -51,7 +51,7 @@ public class DebugProbeInfoEntityProvider implements IProbeInfoEntityProvider {
                 EntityAgeable entityAgeable = (EntityAgeable) entity;
                 int growingAge = entityAgeable.getGrowingAge();
                 vertical
-                        .text(LABEL + "Growing Age: " + INFO + growingAge);
+                        .text(LABEL + "成长时间: " + INFO + growingAge);
             }
         }
     }
diff --git a/src/main/java/mcjty/theoneprobe/apiimpl/providers/DebugProbeInfoProvider.java b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/DebugProbeInfoProvider.java
index 3fc593d..6e21dcb 100644
--- a/src/main/java/mcjty/theoneprobe/apiimpl/providers/DebugProbeInfoProvider.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/DebugProbeInfoProvider.java
@@ -37,14 +37,14 @@ public class DebugProbeInfoProvider implements IProbeInfoProvider {
     private void showDebugInfo(IProbeInfo probeInfo, World world, IBlockState blockState, BlockPos pos, Block block, EnumFacing side) {
         String simpleName = block.getClass().getSimpleName();
         IProbeInfo vertical = probeInfo.vertical(new LayoutStyle().borderColor(0xffff4444).spacing(2))
-                .text(LABEL + "Reg Name: " + INFO + block.getRegistryName().toString())
-                .text(LABEL + "Unlocname: " + INFO + block.getUnlocalizedName())
-                .text(LABEL + "Meta: " + INFO + blockState.getBlock().getMetaFromState(blockState))
-                .text(LABEL + "Class: " + INFO + simpleName)
-                .text(LABEL + "Hardness: " + INFO + block.getBlockHardness(blockState, world, pos))
-                .text(LABEL + "Power W: " + INFO + block.getWeakPower(blockState, world, pos, side.getOpposite())
+                .text(LABEL + "注册名字: " + INFO + block.getRegistryName().toString())
+                .text(LABEL + "未透露的名字: " + INFO + block.getUnlocalizedName())
+                .text(LABEL + "元: " + INFO + blockState.getBlock().getMetaFromState(blockState))
+                .text(LABEL + "类: " + INFO + simpleName)
+                .text(LABEL + "硬度: " + INFO + block.getBlockHardness(blockState, world, pos))
+                .text(LABEL + "电量 W: " + INFO + block.getWeakPower(blockState, world, pos, side.getOpposite())
                         + LABEL + ", S: " + INFO + block.getStrongPower(blockState, world, pos, side.getOpposite()))
-                .text(LABEL + "Light: " + INFO + block.getLightValue(blockState, world, pos));
+                .text(LABEL + "光照等级: " + INFO + block.getLightValue(blockState, world, pos));
         TileEntity te = world.getTileEntity(pos);
         if (te != null) {
             vertical.text(LABEL + "TE: " + INFO + te.getClass().getSimpleName());
diff --git a/src/main/java/mcjty/theoneprobe/apiimpl/providers/DefaultProbeInfoEntityProvider.java b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/DefaultProbeInfoEntityProvider.java
index 5af19c9..43dba7d 100644
--- a/src/main/java/mcjty/theoneprobe/apiimpl/providers/DefaultProbeInfoEntityProvider.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/DefaultProbeInfoEntityProvider.java
@@ -68,7 +68,7 @@ public class DefaultProbeInfoEntityProvider implements IProbeInfoEntityProvider
                 probeInfo.progress(health, maxHealth, probeInfo.defaultProgressStyle().lifeBar(true).showText(false).width(150).height(10));
 
                 if (mode == ProbeMode.EXTENDED) {
-                    probeInfo.text(LABEL + "Health: " + INFOIMP + health + " / " + maxHealth);
+                    probeInfo.text(LABEL + "生命值: " + INFOIMP + health + " / " + maxHealth);
                 }
 
                 if (armor > 0) {
@@ -79,7 +79,7 @@ public class DefaultProbeInfoEntityProvider implements IProbeInfoEntityProvider
             if (Tools.show(mode, config.getShowMobGrowth()) && entity instanceof EntityAgeable) {
                int age = ((EntityAgeable) entity).getGrowingAge();
                if (age < 0) {
-                   probeInfo.text(LABEL + "Growing time: " + ((age * -1) / 20) + "s");
+                   probeInfo.text(LABEL + "成长时间: " + ((age * -1) / 20) + "s");
                }
             }
 
@@ -115,10 +115,10 @@ public class DefaultProbeInfoEntityProvider implements IProbeInfoEntityProvider
                         .item(stack, new ItemStyle().width(16).height(16))
                         .text(INFO + stack.getDisplayName());
                 if (mode == ProbeMode.EXTENDED) {
-                    probeInfo.text(LABEL + "Rotation: " + INFO + itemFrame.getRotation());
+                    probeInfo.text(LABEL + "轮: " + INFO + itemFrame.getRotation());
                 }
             } else {
-                probeInfo.text(LABEL + "Empty");
+                probeInfo.text(LABEL + "空");
             }
         }
 
@@ -133,12 +133,12 @@ public class DefaultProbeInfoEntityProvider implements IProbeInfoEntityProvider
             if (ownerId != null) {
                 String username = UsernameCache.getLastKnownUsername(ownerId);
                 if (username == null) {
-                    probeInfo.text(WARNING + "Unknown owner");
+                    probeInfo.text(WARNING + "未知所有者");
                 } else {
-                    probeInfo.text(LABEL + "Owned by: " + INFO + username);
+                    probeInfo.text(LABEL + "所有者: " + INFO + username);
                 }
             } else if (entity instanceof EntityTameable) {
-                probeInfo.text(LABEL + "Tameable");
+                probeInfo.text(LABEL + "可驯服");
             }
         }
 
@@ -146,16 +146,16 @@ public class DefaultProbeInfoEntityProvider implements IProbeInfoEntityProvider
             if (entity instanceof EntityHorse) {
                 double jumpStrength = ((EntityHorse) entity).getHorseJumpStrength();
                 double jumpHeight = -0.1817584952 * jumpStrength * jumpStrength * jumpStrength + 3.689713992 * jumpStrength * jumpStrength + 2.128599134 * jumpStrength - 0.343930367;
-                probeInfo.text(LABEL + "Jump height: " + INFO + dfCommas.format(jumpHeight));
+                probeInfo.text(LABEL + "跳跃高度: " + INFO + dfCommas.format(jumpHeight));
                 IAttributeInstance iattributeinstance = ((EntityHorse) entity).getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED);
-                probeInfo.text(LABEL + "Speed: " + INFO + dfCommas.format(iattributeinstance.getAttributeValue()));
+                probeInfo.text(LABEL + "速度: " + INFO + dfCommas.format(iattributeinstance.getAttributeValue()));
             }
         }
 
         if (entity instanceof EntityWolf && ConfigSetup.showCollarColor) {
             if (((EntityWolf) entity).isTamed()) {
                 EnumDyeColor collarColor = ((EntityWolf) entity).getCollarColor();
-                probeInfo.text(LABEL + "Collar: " + INFO + collarColor.getName());
+                probeInfo.text(LABEL + "项圈颜色: " + INFO + collarColor.getName());
             }
         }
     }
diff --git a/src/main/java/mcjty/theoneprobe/apiimpl/providers/DefaultProbeInfoProvider.java b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/DefaultProbeInfoProvider.java
index 4e27a0b..6d3ec09 100644
--- a/src/main/java/mcjty/theoneprobe/apiimpl/providers/DefaultProbeInfoProvider.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/DefaultProbeInfoProvider.java
@@ -111,9 +111,9 @@ public class DefaultProbeInfoProvider implements IProbeInfoProvider {
                 int fuel = ((TileEntityBrewingStand) te).getField(1);
                 probeInfo.horizontal(probeInfo.defaultLayoutStyle().alignment(ElementAlignment.ALIGN_CENTER))
                         .item(new ItemStack(Items.BLAZE_POWDER), probeInfo.defaultItemStyle().width(16).height(16))
-                        .text(LABEL + "Fuel: " + INFO + fuel);
+                        .text(LABEL + "燃料: " + INFO + fuel);
                 if (brewtime > 0) {
-                    probeInfo.text(LABEL + "Time: " + INFO + brewtime + " ticks");
+                    probeInfo.text(LABEL + "时间: " + INFO + brewtime + " ticks");
                 }
 
             }
@@ -128,7 +128,7 @@ public class DefaultProbeInfoProvider implements IProbeInfoProvider {
                 String mobName = logic.getCachedEntity().getName();
                 probeInfo.horizontal(probeInfo.defaultLayoutStyle()
                     .alignment(ElementAlignment.ALIGN_CENTER))
-                    .text(LABEL + "Mob: " + INFO + mobName);
+                    .text(LABEL + "生物: " + INFO + mobName);
             }
         }
     }
@@ -148,7 +148,7 @@ public class DefaultProbeInfoProvider implements IProbeInfoProvider {
         if (redstonePower > 0) {
             probeInfo.horizontal()
                     .item(new ItemStack(Items.REDSTONE), probeInfo.defaultItemStyle().width(14).height(14))
-                    .text(LABEL + "Power: " + INFO + redstonePower);
+                    .text(LABEL + "电量: " + INFO + redstonePower);
         }
     }
 
@@ -156,16 +156,16 @@ public class DefaultProbeInfoProvider implements IProbeInfoProvider {
         if (block instanceof BlockLever) {
             Boolean powered = blockState.getValue(BlockLever.POWERED);
             probeInfo.horizontal().item(new ItemStack(Items.REDSTONE), probeInfo.defaultItemStyle().width(14).height(14))
-                    .text(LABEL + "State: " + INFO + (powered ? "On" : "Off"));
+                    .text(LABEL + "状态: " + INFO + (powered ? "开" : "关"));
         } else if (block instanceof BlockRedstoneComparator) {
             BlockRedstoneComparator.Mode mode = blockState.getValue(BlockRedstoneComparator.MODE);
-            probeInfo.text(LABEL + "Mode: " + INFO + mode.getName());
+            probeInfo.text(LABEL + "模式: " + INFO + mode.getName());
         } else if (block instanceof BlockRedstoneRepeater) {
             Boolean locked = blockState.getValue(BlockRedstoneRepeater.LOCKED);
             Integer delay = blockState.getValue(BlockRedstoneRepeater.DELAY);
-            probeInfo.text(LABEL + "Delay: " + INFO + delay + " ticks");
+            probeInfo.text(LABEL + "延迟: " + INFO + delay + " ticks");
             if (locked) {
-                probeInfo.text(INFO + "Locked");
+                probeInfo.text(INFO + "锁定");
             }
         }
     }
@@ -193,7 +193,7 @@ public class DefaultProbeInfoProvider implements IProbeInfoProvider {
     private void addFluidInfo(IProbeInfo probeInfo, ProbeConfig config, FluidStack fluidStack, int maxContents) {
         int contents = fluidStack == null ? 0 : fluidStack.amount;
         if (fluidStack != null) {
-            probeInfo.text(NAME + "Liquid: " + fluidStack.getLocalizedName());
+            probeInfo.text(NAME + "液体: " + fluidStack.getLocalizedName());
         }
         if (config.getTankMode() == 1) {
             probeInfo.progress(contents, maxContents,
@@ -247,15 +247,15 @@ public class DefaultProbeInfoProvider implements IProbeInfoProvider {
 
     private void showGrowthLevel(IProbeInfo probeInfo, IBlockState blockState) {
         for (IProperty<?> property : blockState.getProperties().keySet()) {
-            if(!"age".equals(property.getName())) continue;
+            if(!"生长时间".equals(property.getName())) continue;
             if(property.getValueClass() == Integer.class) {
                 IProperty<Integer> integerProperty = (IProperty<Integer>)property;
                 int age = blockState.getValue(integerProperty);
                 int maxAge = Collections.max(integerProperty.getAllowedValues());
                 if (age == maxAge) {
-                    probeInfo.text(OK + "Fully grown");
+                    probeInfo.text(OK + "已成熟");
                 } else {
-                    probeInfo.text(LABEL + "Growth: " + WARNING + (age * 100) / maxAge + "%");
+                    probeInfo.text(LABEL + "成熟度: " + WARNING + (age * 100) / maxAge + "%");
                 }
             }
             return;
diff --git a/src/main/java/mcjty/theoneprobe/apiimpl/providers/HarvestInfoTools.java b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/HarvestInfoTools.java
index c4af8ea..c5414ec 100644
--- a/src/main/java/mcjty/theoneprobe/apiimpl/providers/HarvestInfoTools.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/HarvestInfoTools.java
@@ -27,18 +27,18 @@ public class HarvestInfoTools {
 
     private static final ResourceLocation ICONS = new ResourceLocation(TheOneProbe.MODID, "textures/gui/icons.png");
     private static String[] harvestLevels = new String[]{
-            "stone",
-            "iron",
-            "diamond",
-            "obsidian",
-            "cobalt"
+            "石",
+            "铁",
+            "钻石",
+            "黑曜石",
+            "钴"
     };
 
     private static final HashMap<String, ItemStack> testTools = new HashMap<>();
     static {
-        testTools.put("shovel", new ItemStack(Items.WOODEN_SHOVEL));
-        testTools.put("axe", new ItemStack(Items.WOODEN_AXE));
-        testTools.put("pickaxe", new ItemStack(Items.WOODEN_PICKAXE));
+        testTools.put("铲", new ItemStack(Items.WOODEN_SHOVEL));
+        testTools.put("斧", new ItemStack(Items.WOODEN_AXE));
+        testTools.put("镐", new ItemStack(Items.WOODEN_PICKAXE));
     }
 
     static void showHarvestLevel(IProbeInfo probeInfo, IBlockState blockState, Block block) {
@@ -53,10 +53,11 @@ public class HarvestInfoTools {
             } else {
                 harvestName = harvestLevels[harvestLevel];
             }
-            probeInfo.text(LABEL + "Tool: " + INFO + harvestTool + " (level " + harvestName + ")");
-        }
+            probeInfo.text(LABEL + "工具: " + INFO + harvestTool + " (挖掘等级: " + harvestName + ")");
+       }
     }
 
+
     static void showCanBeHarvested(IProbeInfo probeInfo, World world, BlockPos pos, Block block, EntityPlayer player) {
         if (ModItems.isProbeInHand(player.getHeldItemMainhand())) {
             // If the player holds the probe there is no need to show harvestability information as the
@@ -66,9 +67,9 @@ public class HarvestInfoTools {
 
         boolean harvestable = block.canHarvestBlock(world, pos, player) && world.getBlockState(pos).getBlockHardness(world, pos) >= 0;
         if (harvestable) {
-            probeInfo.text(OK + "Harvestable");
+            probeInfo.text(OK + "可收获");
         } else {
-            probeInfo.text(WARNING + "Not harvestable");
+            probeInfo.text(WARNING + "不可收获");
         }
     }
 
@@ -121,14 +122,14 @@ public class HarvestInfoTools {
         IProbeInfo horizontal = probeInfo.horizontal(alignment);
         if (harvestable) {
             horizontal.icon(ICONS, 0, offs, dim, dim, iconStyle)
-                    .text(OK + ((harvestTool != null) ? harvestTool : "No tool"));
+                    .text(OK + ((harvestTool != null) ? harvestTool : "没有工具"));
         } else {
             if (harvestName == null || harvestName.isEmpty()) {
                 horizontal.icon(ICONS, 16, offs, dim, dim, iconStyle)
-                        .text(WARNING + ((harvestTool != null) ? harvestTool : "No tool"));
+                        .text(WARNING + ((harvestTool != null) ? harvestTool : "没有工具"));
             } else {
                 horizontal.icon(ICONS, 16, offs, dim, dim, iconStyle)
-                        .text(WARNING + ((harvestTool != null) ? harvestTool : "No tool") + " (level " + harvestName + ")");
+                        .text(WARNING + ((harvestTool != null) ? harvestTool : "没有工具") + harvestTool + " (挖掘等级 " + harvestName + ")");
             }
         }
     }
diff --git a/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/HarvestInfoTools.java.bak b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/HarvestInfoTools.java.bak
new file mode 100644
index 0000000..c6d4692
--- /dev/null
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/apiimpl/providers/HarvestInfoTools.java.bak
@@ -0,0 +1,136 @@
+package mcjty.theoneprobe.apiimpl.providers;
+
+import mcjty.theoneprobe.TheOneProbe;
+import mcjty.theoneprobe.api.ElementAlignment;
+import mcjty.theoneprobe.api.IIconStyle;
+import mcjty.theoneprobe.api.ILayoutStyle;
+import mcjty.theoneprobe.api.IProbeInfo;
+import mcjty.theoneprobe.config.ConfigSetup;
+import mcjty.theoneprobe.items.ModItems;
+import net.minecraft.block.Block;
+import net.minecraft.block.state.IBlockState;
+import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.init.Items;
+import net.minecraft.item.ItemStack;
+import net.minecraft.item.ItemTool;
+import net.minecraft.util.ResourceLocation;
+import net.minecraft.util.math.BlockPos;
+import net.minecraft.world.World;
+import org.apache.commons.lang3.StringUtils;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import static mcjty.theoneprobe.api.TextStyleClass.*;
+
+public class HarvestInfoTools {
+
+    private static final ResourceLocation ICONS = new ResourceLocation(TheOneProbe.MODID, "textures/gui/icons.png");
+    private static String[] harvestLevels = new String[]{
+            "石",
+            "铁",
+            "钻石",
+            "黑曜石",
+            "钴"
+    };
+
+    private static final HashMap<String, ItemStack> testTools = new HashMap<>();
+    static {
+        testTools.put("铲", new ItemStack(Items.WOODEN_SHOVEL));
+        testTools.put("斧", new ItemStack(Items.WOODEN_AXE));
+        testTools.put("镐", new ItemStack(Items.WOODEN_PICKAXE));
+    }
+
+    static void showHarvestLevel(IProbeInfo probeInfo, IBlockState blockState, Block block) {
+        String harvestTool = block.getHarvestTool(blockState);
+        if (harvestTool != null) {
+            int harvestLevel = block.getHarvestLevel(blockState);
+            String harvestName;
+            if (harvestLevel >= harvestLevels.length) {
+                harvestName = Integer.toString(harvestLevel);
+            } else if (harvestLevel < 0) {
+                harvestName = Integer.toString(harvestLevel);
+            } else {
+                harvestName = harvestLevels[harvestLevel];
+            }
+            probeInfo.text(LABEL + "工具: " + INFO + "铲" + " (挖掘等级: " + harvestName + ")");
+       }
+    }
+
+
+    static void showCanBeHarvested(IProbeInfo probeInfo, World world, BlockPos pos, Block block, EntityPlayer player) {
+        if (ModItems.isProbeInHand(player.getHeldItemMainhand())) {
+            // If the player holds the probe there is no need to show harvestability information as the
+            // probe cannot harvest anything. This is only supposed to work in off hand.
+            return;
+        }
+
+        boolean harvestable = block.canHarvestBlock(world, pos, player) && world.getBlockState(pos).getBlockHardness(world, pos) >= 0;
+        if (harvestable) {
+            probeInfo.text(OK + "可收获");
+        } else {
+            probeInfo.text(WARNING + "不可收获");
+        }
+    }
+
+    static void showHarvestInfo(IProbeInfo probeInfo, World world, BlockPos pos, Block block, IBlockState blockState, EntityPlayer player) {
+        boolean harvestable = block.canHarvestBlock(world, pos, player) && world.getBlockState(pos).getBlockHardness(world, pos) >= 0;
+
+        String harvestTool = block.getHarvestTool(blockState);
+        String harvestName = null;
+
+        if (harvestTool == null) {
+            // The block doesn't have an explicitly-set harvest tool, so we're going to test our wooden tools against the block.
+            float blockHardness = blockState.getBlockHardness(world, pos);
+            if (blockHardness > 0f) {
+                for (Map.Entry<String, ItemStack> testToolEntry : testTools.entrySet()) {
+                    // loop through our test tools until we find a winner.
+                    ItemStack testTool = testToolEntry.getValue();
+
+                    if (testTool != null && testTool.getItem() instanceof ItemTool) {
+                        ItemTool toolItem = (ItemTool) testTool.getItem();
+                        // @todo
+                        if (testTool.getDestroySpeed(blockState) >= toolItem.toolMaterial.getEfficiency()) {
+                            // BINGO!
+                            harvestTool = testToolEntry.getKey();
+                            break;
+                        }
+                    }
+                }
+            }
+        }
+
+        if (harvestTool != null) {
+            int harvestLevel = block.getHarvestLevel(blockState);
+            if (harvestLevel < 0) {
+                // NOTE: When a block doesn't have an explicitly-set harvest tool, getHarvestLevel will return -1 for ANY tool. (Expected behavior)
+//                TheOneProbe.logger.info("HarvestLevel out of bounds (less than 0). Found " + harvestLevel);
+            } else if (harvestLevel >= harvestLevels.length) {
+//                TheOneProbe.logger.info("HarvestLevel out of bounds (Max value " + harvestLevels.length + "). Found " + harvestLevel);
+            } else {
+                harvestName = harvestLevels[harvestLevel];
+            }
+            harvestTool = StringUtils.capitalize(harvestTool);
+        }
+
+        boolean v = ConfigSetup.harvestStyleVanilla;
+        int offs = v ? 16 : 0;
+        int dim = v ? 13 : 16;
+
+        ILayoutStyle alignment = probeInfo.defaultLayoutStyle().alignment(ElementAlignment.ALIGN_CENTER);
+        IIconStyle iconStyle = probeInfo.defaultIconStyle().width(v ? 18 : 20).height(v ? 14 : 16).textureWidth(32).textureHeight(32);
+        IProbeInfo horizontal = probeInfo.horizontal(alignment);
+        if (harvestable) {
+            horizontal.icon(ICONS, 0, offs, dim, dim, iconStyle)
+                    .text(OK + ((harvestTool != null) ? harvestTool : "没有工具"));
+        } else {
+            if (harvestName == null || harvestName.isEmpty()) {
+                horizontal.icon(ICONS, 16, offs, dim, dim, iconStyle)
+                        .text(WARNING + ((harvestTool != null) ? harvestTool : "没有工具"));
+            } else {
+                horizontal.icon(ICONS, 16, offs, dim, dim, iconStyle)
+                        .text(WARNING + ((harvestTool != null) ? harvestTool : "没有工具") + harvestTool + " (挖掘等级 " + harvestName + ")");
+            }
+        }
+    }
+}
diff --git a/src/main/java/mcjty/theoneprobe/commands/CommandTopCfg.java b/sdcard/top/src/main/java/mcjty/theoneprobe/commands/CommandTopCfg.java
index da5b081..cbfa5ca 100644
--- a/src/main/java/mcjty/theoneprobe/commands/CommandTopCfg.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/commands/CommandTopCfg.java
@@ -39,25 +39,25 @@ public class CommandTopCfg implements ICommand {
     private static Map<String,Consumer<String[]>> SUBCOMMANDS = new HashMap<>();
 
     static {
-        SUBCOMMANDS.put("center", s -> ConfigSetup.setPos(-1, -1, -1, -1));
-        SUBCOMMANDS.put("topleft", s -> ConfigSetup.setPos(5, 5, -1, -1));
-        SUBCOMMANDS.put("topcenter", s -> ConfigSetup.setPos(-1, 5, -1, -1));
-        SUBCOMMANDS.put("topright", s -> ConfigSetup.setPos(-1, 5, 5, -1));
-        SUBCOMMANDS.put("bottomleft", s -> ConfigSetup.setPos(5, -1, -1, 20));
-        SUBCOMMANDS.put("bottomcenter", s -> ConfigSetup.setPos(-1, -1, -1, 20));
-        SUBCOMMANDS.put("bottomright", s -> ConfigSetup.setPos(-1, -1, 5, 20));
-        SUBCOMMANDS.put("centerleft", s -> ConfigSetup.setPos(5, -1, -1, -1));
-        SUBCOMMANDS.put("centerright", s -> ConfigSetup.setPos(-1, -1, 5, -1));
-        SUBCOMMANDS.put("transparent", s -> ConfigSetup.setBoxStyle(0, 0, 0, 0));
-        SUBCOMMANDS.put("setpos", CommandTopCfg::setPos);
-        SUBCOMMANDS.put("opaque", s -> ConfigSetup.setBoxStyle(2, 0xff999999, 0xff003366, 0));
-        SUBCOMMANDS.put("default", s -> ConfigSetup.setBoxStyle(2, 0xff999999, 0x55006699, 0));
-        SUBCOMMANDS.put("liquids", s -> ConfigSetup.setLiquids(true));
-        SUBCOMMANDS.put("noliquids", s -> ConfigSetup.setLiquids(false));
-        SUBCOMMANDS.put("compactequalstacks", s -> ConfigSetup.setCompactEqualStacks(true));
-        SUBCOMMANDS.put("dontcompactequalstacks", s -> ConfigSetup.setCompactEqualStacks(false));
-        SUBCOMMANDS.put("extendedinmain", s -> ConfigSetup.setExtendedInMain(true));
-        SUBCOMMANDS.put("defaultinmain", s -> ConfigSetup.setExtendedInMain(false));
+        SUBCOMMANDS.put("中间", s -> ConfigSetup.setPos(-1, -1, -1, -1));
+        SUBCOMMANDS.put("左上", s -> ConfigSetup.setPos(5, 5, -1, -1));
+        SUBCOMMANDS.put("中上", s -> ConfigSetup.setPos(-1, 5, -1, -1));
+        SUBCOMMANDS.put("右上", s -> ConfigSetup.setPos(-1, 5, 5, -1));
+        SUBCOMMANDS.put("左下", s -> ConfigSetup.setPos(5, -1, -1, 20));
+        SUBCOMMANDS.put("中下", s -> ConfigSetup.setPos(-1, -1, -1, 20));
+        SUBCOMMANDS.put("右下", s -> ConfigSetup.setPos(-1, -1, 5, 20));
+        SUBCOMMANDS.put("左中", s -> ConfigSetup.setPos(5, -1, -1, -1));
+        SUBCOMMANDS.put("右中", s -> ConfigSetup.setPos(-1, -1, 5, -1));
+        SUBCOMMANDS.put("透明", s -> ConfigSetup.setBoxStyle(0, 0, 0, 0));
+        SUBCOMMANDS.put("设置位置", CommandTopCfg::setPos);
+        SUBCOMMANDS.put("不透明", s -> ConfigSetup.setBoxStyle(2, 0xff999999, 0xff003366, 0));
+        SUBCOMMANDS.put("默认", s -> ConfigSetup.setBoxStyle(2, 0xff999999, 0x55006699, 0));
+        SUBCOMMANDS.put("显示流体", s -> ConfigSetup.setLiquids(true));
+        SUBCOMMANDS.put("不显示流体", s -> ConfigSetup.setLiquids(false));
+        SUBCOMMANDS.put("紧凑堆放", s -> ConfigSetup.setCompactEqualStacks(true));
+        SUBCOMMANDS.put("不要紧凑堆放", s -> ConfigSetup.setCompactEqualStacks(false));
+        SUBCOMMANDS.put("主扩展", s -> ConfigSetup.setExtendedInMain(true));
+        SUBCOMMANDS.put("主默认", s -> ConfigSetup.setExtendedInMain(false));
     }
 
 
@@ -91,7 +91,7 @@ public class CommandTopCfg implements ICommand {
         String cmd = args[0];
         Consumer<String[]> consumer = SUBCOMMANDS.get(cmd);
         if (consumer == null) {
-            ((EntityPlayer)sender).sendStatusMessage(new TextComponentString(TextFormatting.RED + "Unknown style option!"), false);
+            ((EntityPlayer)sender).sendStatusMessage(new TextComponentString(TextFormatting.RED + "未知风格选项！"), false);
         } else {
             consumer.accept(args);
         }
diff --git a/src/main/java/mcjty/theoneprobe/compat/ProbeGoggles.java b/sdcard/top/src/main/java/mcjty/theoneprobe/compat/ProbeGoggles.java
index 35cd776..803bddc 100644
--- a/src/main/java/mcjty/theoneprobe/compat/ProbeGoggles.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/compat/ProbeGoggles.java
@@ -21,7 +21,7 @@ public class ProbeGoggles extends Item implements IBauble {
 
     @SideOnly(Side.CLIENT)
     public void initModel() {
-        ModelLoader.setCustomModelResourceLocation(this, 0, new ModelResourceLocation(getRegistryName(), "inventory"));
+        ModelLoader.setCustomModelResourceLocation(this, 0, new ModelResourceLocation(getRegistryName(), "物品栏"));
     }
 
     @Override
diff --git a/src/main/java/mcjty/theoneprobe/config/TopModConfigGui.java b/sdcard/top/src/main/java/mcjty/theoneprobe/config/TopModConfigGui.java
index d69eeb6..eeaa061 100644
--- a/src/main/java/mcjty/theoneprobe/config/TopModConfigGui.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/config/TopModConfigGui.java
@@ -9,6 +9,6 @@ public class TopModConfigGui extends GuiConfig {
 
     public TopModConfigGui(GuiScreen parentScreen) {
         super(parentScreen, new ConfigElement(ConfigSetup.mainConfig.getCategory(ConfigSetup.CATEGORY_CLIENT)).getChildElements(),
-                TheOneProbe.MODID, false, false, "The One Probe Config");
+                TheOneProbe.MODID, false, false, "The One Probe配置");
     }
 }
diff --git a/src/main/java/mcjty/theoneprobe/gui/GuiConfig.java b/sdcard/top/src/main/java/mcjty/theoneprobe/gui/GuiConfig.java
index 7f2132b..6036891 100644
--- a/src/main/java/mcjty/theoneprobe/gui/GuiConfig.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/gui/GuiConfig.java
@@ -40,10 +40,10 @@ public class GuiConfig extends GuiScreen {
     private List<HitBox> hitboxes = Collections.emptyList();
 
     static {
-        presets.add(new Preset("Default style", 0xff999999, 0x55006699, 2, 0));
-        presets.add(new Preset("WAILA style", 0xff4503d0, 0xff000000, 1, 1));
-        presets.add(new Preset("Full transparent style", 0x00000000, 0x00000000, 0, 0));
-        presets.add(new Preset("Black & White style", 0xffffffff, 0xff000000, 2, 0,
+        presets.add(new Preset("默认样式", 0xff999999, 0x55006699, 2, 0));
+        presets.add(new Preset("WAILA样式", 0xff4503d0, 0xff000000, 1, 1));
+        presets.add(new Preset("全透明样式", 0x00000000, 0x00000000, 0, 0));
+        presets.add(new Preset("黑白样式", 0xffffffff, 0xff000000, 2, 0,
                 Pair.of(MODNAME, "white,italic"),
                 Pair.of(NAME, "white,bold"),
                 Pair.of(INFO, "white"),
@@ -82,17 +82,17 @@ public class GuiConfig extends GuiScreen {
 
         int x = WIDTH + guiLeft + 10;
         int y = guiTop + 10;
-        RenderHelper.renderText(Minecraft.getMinecraft(), x, y, TextFormatting.GOLD + "Placement:");
+        RenderHelper.renderText(Minecraft.getMinecraft(), x, y, TextFormatting.GOLD + "放置:");
         y += 12;
-        RenderHelper.renderText(Minecraft.getMinecraft(), x+10, y, "Click on corner in screenshot");
+        RenderHelper.renderText(Minecraft.getMinecraft(), x+10, y, "点击任意角落截图");
         y += 10;
-        RenderHelper.renderText(Minecraft.getMinecraft(), x+10, y, "to move tooltip there");
+        RenderHelper.renderText(Minecraft.getMinecraft(), x+10, y, "移动提示到这里");
         y += 10;
 
         y += 20;
 
         hitboxes = new ArrayList<>();
-        RenderHelper.renderText(Minecraft.getMinecraft(), x, y, TextFormatting.GOLD + "Presets:");
+        RenderHelper.renderText(Minecraft.getMinecraft(), x, y, TextFormatting.GOLD + "预设:");
         y += 12;
         for (Preset preset : presets) {
             y = addPreset(x, y, preset);
@@ -100,7 +100,7 @@ public class GuiConfig extends GuiScreen {
 
         y += 20;
 
-        RenderHelper.renderText(Minecraft.getMinecraft(), x, y, TextFormatting.GOLD + "Scale:");
+        RenderHelper.renderText(Minecraft.getMinecraft(), x, y, TextFormatting.GOLD + "级别:");
         y += 12;
         addButton(x+10, y, 30, 14, "--", () -> { ConfigSetup.setScale(1.2f);}); x += 36;
         addButton(x+10, y, 30, 14, "-", () -> { ConfigSetup.setScale(1.1f);}); x += 36;
@@ -188,8 +188,8 @@ public class GuiConfig extends GuiScreen {
                 .vertical()
                 .text(NAME + pickBlock.getDisplayName())
                 .text(MODNAME + modid);
-        probeInfo.text(LABEL + "Fuel: " + INFO + "5 volts");
-        probeInfo.text(LABEL + "Error: " + ERROR + "Oups!");
+        probeInfo.text(LABEL + "燃料: " + INFO + "5V");
+        probeInfo.text(LABEL + "错误: " + ERROR + "哎呀!");
 
         renderElements(probeInfo, ConfigSetup.getDefaultOverlayStyle());
     }
diff --git a/src/main/java/mcjty/theoneprobe/gui/GuiNote.java b/sdcard/top/src/main/java/mcjty/theoneprobe/gui/GuiNote.java
index b0721da..9f450d2 100644
--- a/src/main/java/mcjty/theoneprobe/gui/GuiNote.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/gui/GuiNote.java
@@ -112,13 +112,13 @@ public class GuiNote extends GuiScreen {
         hitY = y + guiTop;
         hitX = x + guiLeft;
         drawRect(x, y, x + BUTTON_WIDTH, y + BUTTON_HEIGHT, 0xff000000);
-        RenderHelper.renderText(Minecraft.getMinecraft(), x + 3, y + 4, "Needed"); x += BUTTON_MARGIN;
+        RenderHelper.renderText(Minecraft.getMinecraft(), x + 3, y + 4, "不显示"); x += BUTTON_MARGIN;
 
         drawRect(x, y, x + BUTTON_WIDTH, y + BUTTON_HEIGHT, 0xff000000);
-        RenderHelper.renderText(Minecraft.getMinecraft(), x + 3, y + 4, "Not needed"); x += BUTTON_MARGIN;
+        RenderHelper.renderText(Minecraft.getMinecraft(), x + 3, y + 4, "显示"); x += BUTTON_MARGIN;
 
         drawRect(x, y, x + BUTTON_WIDTH, y + BUTTON_HEIGHT, 0xff000000);
-        RenderHelper.renderText(Minecraft.getMinecraft(), x + 3, y + 4, "Extended"); x += BUTTON_MARGIN;
+        RenderHelper.renderText(Minecraft.getMinecraft(), x + 3, y + 4, "拉伸"); x += BUTTON_MARGIN;
 
         y += BUTTON_HEIGHT - 4;
         return y;
diff --git a/src/main/java/mcjty/theoneprobe/rendering/OverlayRenderer.java b/sdcard/top/src/main/java/mcjty/theoneprobe/rendering/OverlayRenderer.java
index 2d9dddf..0dbdae9 100644
--- a/src/main/java/mcjty/theoneprobe/rendering/OverlayRenderer.java
+++ b/sdcard/top/src/main/java/mcjty/theoneprobe/rendering/OverlayRenderer.java
@@ -226,10 +226,10 @@ public class OverlayRenderer {
             float damage = Minecraft.getMinecraft().playerController.curBlockDamageMP;
             if (damage > 0) {
                 if (ConfigSetup.showBreakProgress == 2) {
-                    damageElement = new ElementText("" + TextFormatting.RED + "Progress " + (int) (damage * 100) + "%");
+                    damageElement = new ElementText("" + TextFormatting.RED + "进度:" + (int) (damage * 100) + "%");
                 } else {
                     damageElement = new ElementProgress((long) (damage * 100), 100, new ProgressStyle()
-                            .prefix("Progress ")
+                            .prefix("进度:")
                             .suffix("%")
                             .width(85)
                             .borderColor(0)
@@ -296,10 +296,10 @@ public class OverlayRenderer {
             DefaultProbeInfoProvider.showStandardBlockInfo(probeConfig, mode, probeInfo, blockState, block, world, blockPos, player, data);
         } catch (Exception e) {
             ThrowableIdentity.registerThrowable(e);
-            probeInfo.text(ERROR + "Error (see log for details)!");
+            probeInfo.text(ERROR + "错误!(从日志查看详细信息)");
         }
 
-        probeInfo.text(ERROR + "Waiting for server...");
+        probeInfo.text(ERROR + "等待服务器...");
         return probeInfo;
     }
 
